{"version":3,"sources":["components/UserInfo.jsx","components/Repo.js","App.js","reportWebVitals.js","index.js"],"names":["UserInfo","resultInfo","userOnclick","userOntype","warning","fullName","userName","location","className","type","placeholder","name","onChange","onClick","src","avatar_url","alt","login","Repo","resultRepos","repotitle","map","repo","href","html_url","target","rel","description","node_id","App","props","e","preventDefault","state","inpt","clientId","clientSecret","setState","axios","get","then","res","data","catch","err","console","log","repos","x","value","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32ff73dd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction UserInfo({ resultInfo, userOnclick, userOntype, warning, fullName, userName, location }) {\r\n    return (        \r\n        <div className='userInp'>\r\n            <div className='inp-btn'>\r\n                <input type=\"text\" placeholder=\"search github user\" name='inpt'  onChange={userOntype}/>\r\n                <button onClick={userOnclick} type=\"submit\" className=\"btn btn-info\">search</button>\r\n                <p className='warning'>{warning}</p>\r\n            </div>\r\n            \r\n            <div className='userinfo'>\r\n                <img src= {resultInfo.avatar_url} alt={resultInfo.login}/>\r\n                <h1>{fullName} {resultInfo.name}</h1>\r\n                <h4>{userName} {resultInfo.login}</h4>\r\n                <h4>{location} {resultInfo.location}</h4>                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UserInfo","import React from 'react'\r\n\r\nfunction Repo({resultRepos,repotitle}) {\r\n    return (\r\n        <div className='repoList'>\r\n            <h4 className='repo'>{repotitle}</h4>\r\n                {resultRepos && resultRepos.map(repo=>(\r\n                    <h6 key={repo.node_id}><a href={repo.html_url}target='_blank'rel=\"noreferrer\">{repo.name} </a><br />{repo.description}</h6>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\nexport default Repo","// App js\nimport axios from 'axios'\nimport { Component } from 'react';\nimport './App.css';\nimport UserInfo from './components/UserInfo';\nimport Repo from './components/Repo';\n\nclass App extends Component {\nconstructor(props){\n    super(props);\n    this.state={\n    inpt:'',\n    repotitle:'',\n    warning:'',\n    fullName:'', userName:'', location:'',\n    resultInfo:[], \n    resultRepos:[],\n    clientId:'f30f7ae4b828dca370fc',\n    clientSecret:'0b0c8cb22734dda71967f97cb53327d23768190d'\n        }\n    }\n    \n    userOnclick=(e)=>{\n        e.preventDefault();\n        const{inpt,clientId,clientSecret}=this.state\n        inpt===''  \n            ? this.setState({warning:`please don't leave empty`}) \n            // for the info request            \n            :axios.get(`https://api.github.com/users/${inpt}?client_id=${clientId}&client_secret=${clientSecret}&sort=created`)\n            .then(res=>{ this.setState({ \n                resultInfo:res.data,\n                fullName:'FULL-NAME:',\n                userName:'USER_NAME:',\n                location:'Location:'})\n                    })\n                .catch(err=>{ \n                    console.log( 'err',err )})\n            // for the repository request\n            axios.get(`https://api.github.com/users/${inpt}/repos?client_id=${clientId}&client_secret=${clientSecret}&sort=created`)\n                .then(repos=>{ this.setState({\n                    resultRepos:repos.data,\n                    repotitle:'His/Her repositories'}\n                    )})\n                .catch( err=>console.log ( err ))                \n            }\n    userOntype=(x)=>{\n        this.setState({\n        [x.target.name]:x.target.value })    \n            this.setState({warning:''})\n        }\n        //render it\n    render(){\n    return (\n        <div className=\"App\">\n        <UserInfo  userOnclick={this.userOnclick} warning={this.state.warning} inpt={this.state.inpt}\n                    resultInfo={this.state.resultInfo} userOntype={this.userOntype} fullName={this.state.fullName} \n                    userName={this.state.userName} location={this.state.location}/>\n\n        <Repo resultRepos={this.state.resultRepos} repotitle={this.state.repotitle}/>\n        </div>\n            );\n        }\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}